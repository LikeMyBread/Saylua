function init(){getMap(),setButton()}function getMap(){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(4==e.readyState&&200==e.status){var t=JSON.parse(e.responseText);map.tiles=t.map,fillMap(map),addPlayer(t.player.x,t.player.y)}},e.open("GET","api/dungeon",!0),e.send()}function getMask(e,t){var a=0,n=2*(map.getTile(e,t-1)||0),y=8*(map.getTile(e-1,t)||0),i=16*(map.getTile(e+1,t)||0),l=64*(map.getTile(e,t+1)||0);a+=n+y+i+l,n>0&&y>0&&(a+=map.getTile(e-1,t-1)||0),n>0&&i>0&&(a+=4*(map.getTile(e+1,t-1)||0)),l>0&&y>0&&(a+=32*(map.getTile(e-1,t+1)||0)),l>0&&i>0&&(a+=128*(map.getTile(e+1,t+1)||0));var o={2:1,8:2,10:3,11:4,16:5,18:6,22:7,24:8,26:9,27:10,30:11,31:12,64:13,66:14,72:15,74:16,75:17,80:18,82:19,86:20,88:21,90:22,91:23,94:24,95:25,104:26,106:27,107:28,120:29,122:30,123:31,126:32,127:33,208:34,210:35,214:36,216:37,218:38,219:39,222:40,223:41,248:42,250:43,251:44,254:45,255:46,0:47};return o[a+""]}function fillMap(e){dungeon=document.getElementById("dungeon"),dungeon.style.width="640px",dungeon.style.height="512px";for(var t=document.createDocumentFragment(),a=0;T_COUNTY>a;a++)for(var n=0;T_COUNTX>n;n++){var y=document.createElement("div");y.id=n+"_"+a,y.className="dungeonTile",y.style.width="64px",y.style.height="64px",e.getTile(n,a)>0&&(y.style.backgroundImage="url('static/img/tiles/"+getMask(n,a)+".png')"),y.addEventListener("click",findPath),y.dataset.x=n,y.dataset.y=a,t.appendChild(y)}dungeon.appendChild(t)}function addPlayer(e,t){dungeon=document.getElementById("dungeon");var a=document.createElement("div");a.id="player",a.className="dungeonObject",a.style.width="64px",a.style.height="64px",a.style.backgroundImage="url('static/img/SHC.png')",a.style.backgroundSize="64px 64px ",dungeon.appendChild(a),movePlayer(e,t)}function movePlayer(e,t){var a=document.getElementById("player");1==map.getTile(player.x+e,player.y+t)&&(player.x+=e,player.y+=t,a.style.left=player.x*T_WIDTH+"px",a.style.top=player.y*T_WIDTH-PLAYER_OFFSET+"px")}function checkKey(e){e=e||window.event,"38"==e.keyCode||"87"==e.keyCode?movePlayer(0,-1):"40"==e.keyCode||"83"==e.keyCode?movePlayer(0,1):"37"==e.keyCode||"65"==e.keyCode?movePlayer(-1,0):"39"!=e.keyCode&&"68"!=e.keyCode||movePlayer(1,0)}function moveHere(){Math.abs(this.dataset.x-player.x)>Math.abs(this.dataset.y-player.y)?this.dataset.x-player.x>0?movePlayer(1,0):movePlayer(-1,0):this.dataset.y-player.y>0?movePlayer(0,1):movePlayer(0,-1)}function findPath(){if(player.x!=this.dataset.x||player.y!=this.dataset.y)for(var e=[{x:this.dataset.x,y:this.dataset.y}],t=[];e.length>0;){var a=e.shift();if(t.push(1*a.x+10*a.y),player.x==a.x-1&&player.y==a.y)return void movePlayer(1,0);if(player.x==1*a.x+1&&player.y==a.y)return void movePlayer(-1,0);if(player.x==1*a.x&&player.y==a.y-1)return void movePlayer(0,1);if(player.x==1*a.x&&player.y==1*a.y+1)return void movePlayer(0,-1);0!=map.getTile(1*a.x-1,1*a.y)&&-1==t.indexOf(1*a.x-1+10*a.y)&&e.push({x:1*a.x-1,y:1*a.y}),0!=map.getTile(1*a.x+1,1*a.y)&&-1==t.indexOf(1*a.x+1+10*a.y)&&e.push({x:1*a.x+1,y:1*a.y}),0!=map.getTile(1*a.x,1*a.y-1)&&-1==t.indexOf(1*a.x+10*(1*a.y-1))&&e.push({x:1*a.x,y:1*a.y-1}),0!=map.getTile(1*a.x,1*a.y+1)&&-1==t.indexOf(1*a.x+10*(1*a.y+1))&&e.push({x:1*a.x,y:1*a.y+1})}}function setButton(){tButton=document.getElementById("tButton"),tButton.onclick=demoAjax}function demoAjax(){var e=new XMLHttpRequest;e.onreadystatechange=function(){4==e.readyState&&200==e.status&&(document.getElementById("demo").innerHTML=e.responseText)},e.open("GET","api/test",!0),e.send()}window.addEventListener("load",init);const T_WIDTH=64,T_COUNTX=10,T_COUNTY=8,TILE_LOC="static/img/tiles/",PLAYER_OFFSET=20;var map={cols:T_COUNTX,rows:T_COUNTY,tsize:T_WIDTH,tiles:[1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,1],getTile:function(e,t){return e>map.cols-1||t>map.rows-1||0>t||0>e?0:this.tiles[t*map.cols+e]}},player={x:0,y:0};window.addEventListener("keydown",function(e){document.activeElement&&document.activeElement!=document.body||([37,38,39,40].indexOf(e.keyCode)>-1&&e.preventDefault(),checkKey())},!1);
//# sourceMappingURL=data:application/json;base64,
